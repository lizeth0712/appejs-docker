name: CI (test + build + push)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/appejs-app
  MAILER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/appejs-mailer

jobs:
  test:
    name: Run unit tests (Node)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      # MÃ©trica de cobertura en el Job Summary
      - name: Coverage Summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/cobertura-coverage.xml
          badge: true
          format: markdown
          output: both

      # Guarda reportes (para ver/descargar)
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  docker:
    name: Build & Push images
    runs-on: ubuntu-latest
    needs: test     # <- solo si los tests pasan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # App (Node)
      - name: Build & Push App
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.APP_IMAGE }}:latest
            ${{ env.APP_IMAGE }}:${{ github.sha }}

      # Mailer (Flask)
      - name: Build & Push Mailer
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.flask
          push: true
          tags: |
            ${{ env.MAILER_IMAGE }}:latest
            ${{ env.MAILER_IMAGE }}:${{ github.sha }}
